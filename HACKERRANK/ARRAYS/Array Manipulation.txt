*********************************************************************************************
Starting with a 1-indexed array of zeros and a list of operations, 
for each operation add a value to each the array element between two given indices, inclusive. 
Once all operations have been performed, return the maximum value in the array.

*********************************************************************************************

public class Solution {
public static void main(String[] args) throws IOException {
Scanner sc = new Scanner(System.in);
int a = sc.nextInt();
int b = sc.nextInt();
long[] no = new long[a+1];
for(int i = 0; i < b; i++){
int k = sc.nextInt();
int m = sc.nextInt();
int n = sc.nextInt();
no[k] =no[k]+n;
if(m + 1 <= a)
{
no[m+1] =no[m+1]- n;
}
}
long max = Long.MIN_VALUE;
long sum = 0;
for(int i = 1; i < no.length; i++)
{
sum = sum + no[i];
if(sum > max)
{
max = sum;
}
}
System.out.println(max);
}
}